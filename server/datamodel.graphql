type User {
  id: ID! @unique
  email: String! @unique
  firstName: String!
  middleNames: [String!]!
  lastName: String!
  hashedPassword: String!
  aboutMe: String
  nationality: String
  livingInCountry: String
  livingInCity: String
  website: String
  languageSkills: String
  workExperience: String
  education: String
  interestTags: [String!]!
  userType: UserType!
  employer: Employer @relation(name: "RegisteredEmployees")
  employerAccessRights: EmployerAccessRights
  applications: [Application!]! @relation(name: "ApplicationsByUser" onDelete: CASCADE)
  messageThreads: [MessageThread!]!
}

type Employer {
  id: ID! @unique
  contactEmail: String! @unique
  companyName: String! @unique
  country: String
  city: String
  website: String
  logoUrl: String
  postings: [Posting!]!
  users: [User!]! @relation(name: "RegisteredEmployees" onDelete: CASCADE)
  processes: [EmploymentProcess!]!
}

type Application {
  id: ID! @unique
  posting: Posting! @relation(name: "ApplicationsForPosition")
  applicant: User! @relation(name: "ApplicationsByUser")
  applicationLetter: String!
  status: ApplicationStatus!
}

type EmploymentProcess {
  id: ID! @unique
  candidate: User!
  employer: Employer!
}

type Posting {
  id: ID! @unique
  customId: String! @unique
  postingTitle: String!
  positionTitle: String!
  country: String!
  city: String
  employmentType: EmploymentType!
  description: String
  minimumSalary: Int
  maximumSalary: Int
  currency: String
  workingHoursFrom: String
  workingHoursTo: String
  vacationDays: Int
  minimumEducation: String
  minimumExperience: String
  internationalOK: Boolean
  hasRelocationAllowance: Boolean
  requirements: String!
  niceToHave: String
  tags: [String!]!
  releaseAt: DateTime
  expiresAt: DateTime!

  offeredBy: Employer!
  status: PostingStatus!
  applications: [Application!]! @relation(name: "ApplicationsForPosition" onDelete: CASCADE)
  createdDate: DateTime!
}

type MessageThread {
  id: ID! @unique
  users: [User!]!
  messages: [Message!]!
}

type Message {
  from: User! @relation(name: "Sender")
  to: User! @relation(name: "Receiver")
  sentAt: DateTime!
  readAt: DateTime
  message: String!
}

type YearMonth {
  year: Int!
  month: Int!
}

type LanguageSkill {
  languageName: String!
  profifiencyLevel: LanguageProficiencyLevel!
}

enum LanguageProficiencyLevel {
  NATIVE,
  FLUENT,
  BUSINESS,
  INTERMEDIATE,
  ELEMENTARY,
}

enum DegreeType {
  PHD,
  MASTERS,
  BACHELORS,
  PROFESSION,
  EXCHANGE,
  OTHER
}

enum EmploymentType {
  FULL_TIME,
  PART_TIME,
  INTERNSHIP,
  CONTRACTOR
}

enum PostingStatus {
  ACTIVE,
  ARCHIVED,
  UPCOMING
}

enum UserType {
  CANDIDATE,
  EMPLOYER
}

enum EmployerAccessRights {
  ADMIN,
  EDITOR,
}

enum ApplicationStatus {
  WAITING_FOR_REVIEW,
  IN_REVIEW,
  REJECTED,
  ACCEPTED
}